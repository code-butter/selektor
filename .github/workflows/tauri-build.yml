name: Build Tauri App

on: push

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
            toolchains: 'aarch64-apple-darwin,x86_64-apple-darwin'
            target_path: 'universal-apple-darwin/release/selektor'
            asset_name: 'macos-selektor'
          - platform: 'ubuntu-latest'
            args: ''
            toolchains: ''
            target_path: 'release/selektor'
            asset_name: 'linux-selektor'
          - platform: 'windows-latest'
            args: ''
            toolchains: ''
            target_path: 'release/selektor.exe'
            asset_name: 'selektor.exe'

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libsoup2.4-dev \
            libjavascriptcoregtk-4.0-dev

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.toolchains }}

      - name: Cache NPM modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: "${{ matrix.os }}-npm-${{ hashFiles('package-lock.json') }}"


      - name: Cache Rust build
        uses: actions/cache@v3
        with:
          path: src-tauri/target
          key: "${{ matrix.os }}-rust-${{ hashFiles('src-tauri/Cargo.lock') }}"

      - name: Install frontend dependencies
        run: npm install

      - name: Build app
        run:  npm run tauri build -- ${{ matrix.args }} -b none

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: src-tauri/target/${{ matrix.target_path }}
          if-no-files-found: error

  publish:
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          merge-multiple: true

      - name: Create release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: 'release/*'
